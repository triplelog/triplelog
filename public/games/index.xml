<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Games on TripleLog - Mobile Games, Sports, and Math.</title>
    <link>https://www.triplelog.com/games/</link>
    <description>Recent content in Games on TripleLog - Mobile Games, Sports, and Math.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.triplelog.com/games/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Family Farm</title>
      <link>https://www.triplelog.com/games/familyfarm/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/familyfarm/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title>How to Sudoku by TripleLog</title>
      <link>https://www.triplelog.com/games/sudoku/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/sudoku/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title>Picture Sudoku by TripleLog</title>
      <link>https://www.triplelog.com/games/pictures/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/pictures/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title>Sudoku Farm Plot Details by TripleLog</title>
      <link>https://www.triplelog.com/games/plotdetails/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plotdetails/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title>Sudoku Farm Plots by TripleLog</title>
      <link>https://www.triplelog.com/games/plots/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plots/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title>Sudoku Farm Resources by TripleLog</title>
      <link>https://www.triplelog.com/games/resources/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/resources/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title>Sudoku Page</title>
      <link>https://www.triplelog.com/games/sudokupage/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/sudokupage/</guid>
      <description>Hello! </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/contents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/contents/</guid>
      <description> More Tutorials Learn Sudoku
Picture Sudokus
Resources Overview
Plots Overview
Plots Detail
Family Farm
Crop Rotation
Population Frenzy
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/familyfarm/interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/familyfarm/interactive/</guid>
      <description> Complete the sudoku puzzle.   Complete the sudoku puzzle.   Complete the sudoku puzzle.   function drawTop(numId,ctx,imgs,divWidth,gameType,puzzleData) { var img = new Image(); img.onload = function(){ ctx.drawImage(img,divWidth/7*numId+3,3,divWidth/7-6,divWidth/9-6); }; img.src = &#39;/images/&#39;+gameType+(numId+1).toString()+&#39;.png&#39;; return imgs; } function draw(numId,ctx,imgs,divWidth,gameType,puzzleData) { var img = new Image(); img.onload = function(){ ctx.drawImage(img,divWidth/9*numId+3,divWidth/9*10+3+divWidth/3,divWidth/9-6,divWidth/9-6); imgs[numId] = img; for (i=0;i-1) { puzzleData[row][col] = lastTouch+1; puzzleData = checkPuzzle(puzzleData,row,col); if (puzzleData[row][col]  0) { ctx.drawImage(imgs[lastTouch],divWidth/9*col+3,divWidth/9*row+3+divWidth/3,divWidth/9-6,divWidth/9-6); var initZero = 0; for (zi=0;zi0) { for (iii=0;iii</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/familyfarm/objective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/familyfarm/objective/</guid>
      <description>Objectives Know the Rules Know the Strategy   greenRedRatio = [[0],[0]]; function sumArray(theArray) { var workingSum = 0 for (arri=0;arri.975) {x = 1} var fullString = allGreen.item(i).textContent+allRed.item(i).textContent; allGreen.item(i).innerHTML = fullString.substring(0,fullString.length*x); allRed.item(i).innerHTML = fullString.substring(fullString.length*x,fullString.length); if (x  .975) { if (i=0) { var index = videoPlaylist.indexOf(i+1); if (index  -1) { videoPlaylist.splice(index,1); } } } } } greenRed(); function quizButton1(buttonID) { var vid = document.getElementById(&#34;myVideo&#34;); document.getElementById(&#34;pullQuote&#34;).innerHTML = vid.currentTime; if (buttonID == 0) { vid.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/familyfarm/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/familyfarm/text/</guid>
      <description>What are the rules?   Population increases by 1 every 3 turns.   Never run out of any resource.    How do I win?   Run a balanced farm.   Think a few turns ahead.     </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/familyfarm/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/familyfarm/video/</guid>
      <description>var videoPlaylist = [1]; document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;ended&#39;,videoEnded,false); document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;timeupdate&#39;,updateTime,false); function videoEnded() { var vid = document.getElementById(&#39;myVideo&#39;); var newVid = false; if (videoPlaylist.length  0) { for (i=0;i0) { if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video1.mp4&#34;) { greenRedRatio[0][0] = Math.max(vid.currentTime/(vid.duration-.5),greenRedRatio[0][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video2.mp4&#34;) { greenRedRatio[1][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[1][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video3.mp4&#34;) { greenRedRatio[2][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[2][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video4.mp4&#34;) { greenRedRatio[3][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[3][0]); greenRed(); } } } function chgVideo(videoId) { var vid = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/pictures/interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/pictures/interactive/</guid>
      <description> Complete the sudoku puzzle.   Complete the sudoku puzzle.   Complete the sudoku puzzle.   function draw(numId,ctx,imgs,divWidth,gameType,puzzleData) { var img = new Image(); img.onload = function(){ ctx.drawImage(img,divWidth/9*numId+3,divWidth/9*10+3,divWidth/9-6,divWidth/9-6); imgs[numId] = img; for (i=0;i-1) { puzzleData[row][col] = lastTouch+1; puzzleData = checkPuzzle(puzzleData,row,col); if (puzzleData[row][col]  0) { ctx.drawImage(imgs[lastTouch],divWidth/9*col+3,divWidth/9*row+3,divWidth/9-6,divWidth/9-6); var initZero = 0; for (zi=0;zi0) { for (iii=0;iii</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/pictures/objective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/pictures/objective/</guid>
      <description>Objectives Know the pictures Puzzle 1 Puzzle 2 Puzzle 3   greenRedRatio = [[0,0,0,0,0,0,0,0,0],[0],[0],[0]]; function sumArray(theArray) { var workingSum = 0 for (arri=0;arri.975) {x = 1} var fullString = allGreen.item(i).textContent+allRed.item(i).textContent; allGreen.item(i).innerHTML = fullString.substring(0,fullString.length*x); allRed.item(i).innerHTML = fullString.substring(fullString.length*x,fullString.length); if (x  .975) { if (i=0) { var index = videoPlaylist.indexOf(i+1); if (index  -1) { videoPlaylist.splice(index,1); } } } } } greenRed(); function quizButton1(buttonID) { var vid = document.getElementById(&#34;myVideo&#34;); document.getElementById(&#34;pullQuote&#34;).innerHTML = vid.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/pictures/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/pictures/text/</guid>
      <description>Rules of Sudoku   Each row must contain each picture exactly once.   Each column must contain each picture exactly once.   Each 3x3 block must contain each picture exactly once.    What Pictures?   Cow   Chicken   Sheep   Well   Forest   Apple   Beans   Wheat   Corn     </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/pictures/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/pictures/video/</guid>
      <description>var videoPlaylist = [1]; document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;ended&#39;,videoEnded,false); document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;timeupdate&#39;,updateTime,false); function videoEnded() { var vid = document.getElementById(&#39;myVideo&#39;); var newVid = false; if (videoPlaylist.length  0) { for (i=0;i0) { if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video1.mp4&#34;) { greenRedRatio[0][0] = Math.max(vid.currentTime/(vid.duration-.5),greenRedRatio[0][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video2.mp4&#34;) { greenRedRatio[1][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[1][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video3.mp4&#34;) { greenRedRatio[2][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[2][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video4.mp4&#34;) { greenRedRatio[3][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[3][0]); greenRed(); } } } function chgVideo(videoId) { var vid = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plotdetails/interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plotdetails/interactive/</guid>
      <description>You need to know which plots produce which resources and which plots consume which resources so that your farm never runs out.              Take Turn    Sortable.create(ranked, { group: { name: &#39;ranked&#39;, put: &#39;unranked&#39;, pull: function (to, from) { return &#39;true&#39;; } }, onEnd: function (/**Event*/evt) { sortEnded(evt.to.id,evt.from.id,evt.oldIndex,evt.newIndex); }, animation: 200 }); Sortable.create(unranked, { group: { name: &#39;unranked&#39;, put: function (to) { return &#39;true&#39;; } }, onEnd: function (/**Event*/evt) { sortEnded(evt.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plotdetails/objective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plotdetails/objective/</guid>
      <description>Objectives Rank the good plots Rank the bad plots   greenRedRatio = [[0],[0]]; function sumArray(theArray) { var workingSum = 0 for (arri=0;arri.975) {x = 1} var fullString = allGreen.item(i).textContent+allRed.item(i).textContent; allGreen.item(i).innerHTML = fullString.substring(0,fullString.length*x); allRed.item(i).innerHTML = fullString.substring(fullString.length*x,fullString.length); if (x  .975) { if (i=0) { var index = videoPlaylist.indexOf(i+1); if (index  -1) { videoPlaylist.splice(index,1); } } } } } greenRed(); function quizButton1(buttonID) { var vid = document.getElementById(&#34;myVideo&#34;); document.getElementById(&#34;pullQuote&#34;).innerHTML = vid.currentTime; if (buttonID == 0) { vid.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plotdetails/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plotdetails/text/</guid>
      <description>Cows
+21 &amp;#x1F355, +10 &amp;#x1F4A9, +5 &amp;#x1F455
-20 &amp;#x1F35A, -1 &amp;#x1F4A7   Chickens
+16 &amp;#x1F355, +10 &amp;#x1F4A9
-10 &amp;#x1F35A, -1 &amp;#x1F4A7   Sheep
+13 &amp;#x1F455, +10 &amp;#x1F4A9, +3 &amp;#x1F355
-10 &amp;#x1F35A, -1 &amp;#x1F4A7      Well
+30 &amp;#x1F4A7   Forest
+15 &amp;#x1F525   Orchard
+10 &amp;#x1F355, +3 &amp;#x1F35A, +2 &amp;#x1F525      Beans
+30 &amp;#x1F355
-10 &amp;#x1F4A9, -5 &amp;#x1F4A7   Wheat</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plotdetails/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plotdetails/video/</guid>
      <description>var videoPlaylist = [1]; document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;ended&#39;,videoEnded,false); document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;timeupdate&#39;,updateTime,false); function videoEnded() { var vid = document.getElementById(&#39;myVideo&#39;); var newVid = false; if (videoPlaylist.length  0) { for (i=0;i0) { if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video1.mp4&#34;) { greenRedRatio[0][0] = Math.max(vid.currentTime/(vid.duration-.5),greenRedRatio[0][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video2.mp4&#34;) { greenRedRatio[1][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[1][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video3.mp4&#34;) { greenRedRatio[2][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[2][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video4.mp4&#34;) { greenRedRatio[3][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[3][0]); greenRed(); } } } function chgVideo(videoId) { var vid = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plots/interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plots/interactive/</guid>
      <description>You need to know which plots produce which resources and which plots consume which resources so that your farm never runs out.   
  
  
   Take Turn   function choosePlot(plotNum) { if (document.getElementById(&#34;plot&#34;+plotNum.toString()).style.backgroundColor == &#34;green&#34;) { document.getElementById(&#34;plot&#34;+plotNum.toString()).style.backgroundColor = &#34;red&#34;; plotData[plotNum-1] = -1; } else if (document.getElementById(&#34;plot&#34;+plotNum.toString()).style.backgroundColor == &#34;red&#34;) { document.getElementById(&#34;plot&#34;+plotNum.toString()).style.backgroundColor = &#34;white&#34;; plotData[plotNum-1] = 0; } else { document.getElementById(&#34;plot&#34;+plotNum.toString()).style.backgroundColor = &#34;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plots/objective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plots/objective/</guid>
      <description>Objectives Know the plots Who makes what? Who consumes what?   greenRedRatio = [[0],[0],[0]]; function sumArray(theArray) { var workingSum = 0 for (arri=0;arri.975) {x = 1} var fullString = allGreen.item(i).textContent+allRed.item(i).textContent; allGreen.item(i).innerHTML = fullString.substring(0,fullString.length*x); allRed.item(i).innerHTML = fullString.substring(fullString.length*x,fullString.length); if (x  .975) { if (i=0) { var index = videoPlaylist.indexOf(i+1); if (index  -1) { videoPlaylist.splice(index,1); } } } } } greenRed(); function quizButton1(buttonID) { var vid = document.getElementById(&#34;myVideo&#34;); document.getElementById(&#34;pullQuote&#34;).innerHTML = vid.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plots/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plots/text/</guid>
      <description>  Cows
+Food,+Clothes,+Manure
-Feed,-Water   Chickens
+Food,+Manure
-Feed,-Water   Sheep
+Food,+Clothes,+Manure
-Feed,-Water      Well
+Water   Forest
+Firewood   Orchard
+Food,+Feed,+Firewood      Beans
+Food
-Water,-Manure   Wheat
+Food,+Feed
-Water,-Manure   Corn
+Food,+Feed
-Water,-Manure     </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/plots/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/plots/video/</guid>
      <description>var videoPlaylist = [1]; document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;ended&#39;,videoEnded,false); document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;timeupdate&#39;,updateTime,false); function videoEnded() { var vid = document.getElementById(&#39;myVideo&#39;); var newVid = false; if (videoPlaylist.length  0) { for (i=0;i0) { if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video1.mp4&#34;) { greenRedRatio[0][0] = Math.max(vid.currentTime/(vid.duration-.5),greenRedRatio[0][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video2.mp4&#34;) { greenRedRatio[1][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[1][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video3.mp4&#34;) { greenRedRatio[2][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[2][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video4.mp4&#34;) { greenRedRatio[3][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[3][0]); greenRed(); } } } function chgVideo(videoId) { var vid = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/resources/interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/resources/interactive/</guid>
      <description>Take Turn Each turn you can choose which resource to build up. To take a turn, click on a resource and then click the Take Turn button. The top row of numbers represents the total quantity of each resource stored at your farm. The next row represents the current net change in that resource each turn. After you click on a resource, the bottom row will update so you know exactly what will happen on the turn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/resources/objective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/resources/objective/</guid>
      <description>Objectives Know the resources Survive 3 rounds Survive 6 rounds Survive 9 rounds   greenRedRatio = [[0,0,0,0,0,0],[0],[0],[0]]; function sumArray(theArray) { var workingSum = 0 for (arri=0;arri.975) {x = 1} var fullString = allGreen.item(i).textContent+allRed.item(i).textContent; allGreen.item(i).innerHTML = fullString.substring(0,fullString.length*x); allRed.item(i).innerHTML = fullString.substring(fullString.length*x,fullString.length); if (x  .975) { if (i=0) { var index = videoPlaylist.indexOf(i+1); if (index  -1) { videoPlaylist.splice(index,1); } } } } } greenRed(); function quizButton1(buttonID) { var vid = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/resources/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/resources/text/</guid>
      <description>What are the Resources?   Food   Water   Feed   Manure   Firewood   Clothes    What about them?   If your farm ever runs out of any resource, you lose.   Your family needs food, water, firewood, and clothes to survive.   Each plot produces certain resources each turn.   Some plots consume water, feed, and/or manure each turn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/resources/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/resources/video/</guid>
      <description>var videoPlaylist = [1]; document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;ended&#39;,videoEnded,false); document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;timeupdate&#39;,updateTime,false); function videoEnded() { var vid = document.getElementById(&#39;myVideo&#39;); var newVid = false; if (videoPlaylist.length  0) { for (i=0;i0) { if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video1.mp4&#34;) { greenRedRatio[0][0] = Math.max(vid.currentTime/(vid.duration-.5),greenRedRatio[0][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video2.mp4&#34;) { greenRedRatio[1][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[1][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video3.mp4&#34;) { greenRedRatio[2][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[2][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video4.mp4&#34;) { greenRedRatio[3][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[3][0]); greenRed(); } } } function chgVideo(videoId) { var vid = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/sudoku/interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/sudoku/interactive/</guid>
      <description>In the above sudoku puzzle, there is a 1 that violates the rules.   Identify the 1 breaking all 3 rules.   Determine what # replaces the 1.   Click that # in the bottom red row.   Click the cell to be changed.     There is a row in the above puzzle with only one cell that can be a 9.   Determine where a 9 must go.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/sudoku/objective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/sudoku/objective/</guid>
      <description>Objectives Learn basic rules Strategy 1 Strategy 2 Strategy 3   greenRedRatio = [[0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]; function sumArray(theArray) { var workingSum = 0 for (arri=0;arri.975) {x = 1} var fullString = allGreen.item(i).textContent+allRed.item(i).textContent; allGreen.item(i).innerHTML = fullString.substring(0,fullString.length*x); allRed.item(i).innerHTML = fullString.substring(fullString.length*x,fullString.length); if (x  .975) { if (i=0) { var index = videoPlaylist.indexOf(i+1); if (index  -1) { videoPlaylist.splice(index,1); } } } } } greenRed(); function quizButton1(buttonID) { var vid = document.getElementById(&#34;myVideo&#34;); document.getElementById(&#34;pullQuote&#34;).innerHTML = vid.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/sudoku/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/sudoku/text/</guid>
      <description>Rules of Sudoku   Each row must contain each number from 1-9 exactly once.   Each column must contain each number from 1-9 exactly once.   Each 3x3 block must contain each number from 1-9 exactly once.    Basic Strategy   Look for numbers that must be placed in a particular cell. Video Scenario   Look for cells that only have one acceptable option.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.triplelog.com/games/sudoku/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.triplelog.com/games/sudoku/video/</guid>
      <description>var videoPlaylist = [1,2,3,4]; document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;ended&#39;,videoEnded,false); document.getElementById(&#39;myVideo&#39;).addEventListener(&#39;timeupdate&#39;,updateTime,false); function videoEnded() { var vid = document.getElementById(&#39;myVideo&#39;); var newVid = false; if (videoPlaylist.length  0) { for (i=0;i0) { if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video1.mp4&#34;) { greenRedRatio[0][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[0][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video2.mp4&#34;) { greenRedRatio[1][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[1][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video3.mp4&#34;) { greenRedRatio[2][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[2][0]); greenRed(); } else if (vid.getAttribute(&#34;src&#34;) == &#34;/videos/video4.mp4&#34;) { greenRedRatio[3][0] = Math.max(vid.currentTime/(vid.duration*2-.5),greenRedRatio[3][0]); greenRed(); } } } function chgVideo(videoId) { var vid = document.</description>
    </item>
    
  </channel>
</rss>